- name: Facts
  set_fact:
    vhost_directory: "/var/www/{{ vhost_domain }}"
    apache_etc: "/etc/apache2"

- name: Site facts
  set_fact:
    apache_sites_available: "{{ apache_etc }}/sites-available"
    apache_sites_enabled: "{{ apache_etc }}/sites-enabled"
    apache_sites_include: "{{ apache_etc }}/sites-include"

- name: Fact
  set_fact:
    vhost_user_home: "{{ vhost_directory }}"
  when: not vhost_user_home is defined

- name: PHP facts
  set_fact:
    php_fpm_poolname: "{{ vhost_domain }}"
    php_fpm_user: "{{ vhost_user }}"
    php_fpm_chdir: "{{ vhost_directory }}/htdocs"
    php_fpm_tmpdir: "{{ vhost_directory }}/tmp"
  when: use_php|bool

- name: Create site-include directory
  file:
    path: "{{ apache_sites_include }}"
    owner: "root"
    group: "root"
    mode: "0755"
    state: "directory"

- name: Ensure apache sites-available/sites-enabled exists
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ apache_sites_enabled }}"
    - "{{ apache_sites_available }}"

- name: Create vhost directory
  file:
    path: "{{ vhost_directory }}" 
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Ensure vhost_user_home exists
  file:
    path: "{{ vhost_user_home }}"
    state: directory

- name: Create vhost user
  user:
    name: "{{ vhost_user }}"
    createhome: no
    home: "{{ vhost_user_home }}"
    shell: "{{vhost_user_shell}}"

- name: Add www-data to users group
  user:
    name: www-data
    append: yes
    groups: "{{ vhost_user }}"

- name: Add user to www-data group
  user:
    name: "{{ vhost_user }}"
    append: yes
    groups: www-data

- name: Check if bash_history exists
  stat:
    path: "{{ vhost_user_home }}/.bash_history"
  register: stat_bash_history

- name: Create bash history file
  file:
    path: "{{ vhost_user_home }}/.bash_history"
    state: "touch"
  when: vhost_user_bash_files and not stat_bash_history.stat.exists

- name: Set bash history permissions
  file:
    path: "{{ vhost_user_home }}/.bash_history"
    owner: "{{ vhost_user }}"
    group: "{{ vhost_user }}"
    mode: 0640
  when: stat_bash_history.stat.exists

- name: Check if bashrc exists
  stat:
    path: "{{ vhost_user_home }}/.bashrc"
  register: stat_bashrc

- name: Create bashrc file
  file:
    path: "{{ vhost_user_home }}/.bashrc"
    state: "touch"
  when: vhost_user_bash_files and not stat_bashrc.stat.exists

- name: Set bashrc permissions
  file:
    path: "{{ vhost_user_home }}/.bashrc"
    owner: "{{ vhost_user }}"
    group: "{{ vhost_user }}"
    mode: 0640
  when: stat_bashrc.stat.exists

- name: Check if .viminfo exists
  stat:
    path: "{{ vhost_user_home }}/.viminfo"
  register: stat_viminfo

- name: Create .viminfo
  file:
    path: "{{ vhost_user_home }}/.viminfo"
    state: "touch"
  when: vhost_user_bash_files and not stat_viminfo.stat.exists

- name: Set .viminfo permissions
  file:
    path: "{{ vhost_user_home }}/.viminfo"
    owner: "{{ vhost_user }}"
    group: "{{ vhost_user }}"
    mode: 0640
  when: stat_viminfo.stat.exists

- name: Create htdocs
  file:
    path: "{{ vhost_directory }}/htdocs"
    owner: "{{ vhost_user }}"
    group: "{{ vhost_user }}"
    mode: 0750
    state: directory

- name: Create log directory
  file:
    path: "{{ vhost_directory }}/logs"
    owner: root
    group: "{{ vhost_user }}"
    mode: 0750
    state: directory

- name: Create tmp directory
  file:
    path: "{{ vhost_directory }}/tmp"
    owner: "{{ vhost_user }}"
    group: "{{ vhost_user }}"
    mode: 0700
    state: directory

- name: PHP
  include_role:
    name: php
  when: use_php|bool

- name: Apache install mod_perl
  apt:
    name: libapache2-mod-perl2
  notify: restart apache2
  when: use_perl|bool

- name: Apache configuration
  template:
    src: vhost.conf.j2
    dest: "{{ apache_sites_available }}/{{ vhost_domain }}.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart apache2

- name: Enable Apache configuration
  file:
    state: link
    src: "{{ apache_sites_available }}/{{ vhost_domain }}.conf"
    path: "{{ apache_sites_enabled }}/{{ vhost_domain }}.conf"
  notify: restart apache2
